// Code generated by MockGen. DO NOT EDIT.
// Source: currency_psql.go

// Package test_postgres is a generated GoMock package.
package mock_postgres

import (
	currpb "currency-service/internal/proto/currpb"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockCurrencyPsqlFuncs is a mock of CurrencyPsqlFuncs interface.
type MockCurrencyPsqlFuncs struct {
	ctrl     *gomock.Controller
	recorder *MockCurrencyPsqlFuncsMockRecorder
}

// MockCurrencyPsqlFuncsMockRecorder is the mock recorder for MockCurrencyPsqlFuncs.
type MockCurrencyPsqlFuncsMockRecorder struct {
	mock *MockCurrencyPsqlFuncs
}

// NewMockCurrencyPsqlFuncs creates a new mock instance.
func NewMockCurrencyPsqlFuncs(ctrl *gomock.Controller) *MockCurrencyPsqlFuncs {
	mock := &MockCurrencyPsqlFuncs{ctrl: ctrl}
	mock.recorder = &MockCurrencyPsqlFuncsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCurrencyPsqlFuncs) EXPECT() *MockCurrencyPsqlFuncsMockRecorder {
	return m.recorder
}

// AddWorkerInfo mocks base method.
func (m *MockCurrencyPsqlFuncs) AddWorkerInfo(arg0 time.Time, arg1 string, arg2 float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddWorkerInfo", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddWorkerInfo indicates an expected call of AddWorkerInfo.
func (mr *MockCurrencyPsqlFuncsMockRecorder) AddWorkerInfo(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddWorkerInfo", reflect.TypeOf((*MockCurrencyPsqlFuncs)(nil).AddWorkerInfo), arg0, arg1, arg2)
}

// GetCurrencyChanges mocks base method.
func (m *MockCurrencyPsqlFuncs) GetCurrencyChanges(arg0, arg1 time.Time) ([]*currpb.CurrencyRates, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrencyChanges", arg0, arg1)
	ret0, _ := ret[0].([]*currpb.CurrencyRates)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrencyChanges indicates an expected call of GetCurrencyChanges.
func (mr *MockCurrencyPsqlFuncsMockRecorder) GetCurrencyChanges(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrencyChanges", reflect.TypeOf((*MockCurrencyPsqlFuncs)(nil).GetCurrencyChanges), arg0, arg1)
}

// GetOneCurrencyRate mocks base method.
func (m *MockCurrencyPsqlFuncs) GetOneCurrencyRate(arg0 time.Time) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOneCurrencyRate", arg0)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOneCurrencyRate indicates an expected call of GetOneCurrencyRate.
func (mr *MockCurrencyPsqlFuncsMockRecorder) GetOneCurrencyRate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOneCurrencyRate", reflect.TypeOf((*MockCurrencyPsqlFuncs)(nil).GetOneCurrencyRate), arg0)
}

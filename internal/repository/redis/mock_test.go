// Code generated by MockGen. DO NOT EDIT.
// Source: redis.go

// Package test_cur_redis is a generated GoMock package.
package test_cur_redis

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRedisFuncs is a mock of RedisFuncs interface.
type MockRedisFuncs struct {
	ctrl     *gomock.Controller
	recorder *MockRedisFuncsMockRecorder
}

// MockRedisFuncsMockRecorder is the mock recorder for MockRedisFuncs.
type MockRedisFuncsMockRecorder struct {
	mock *MockRedisFuncs
}

// NewMockRedisFuncs creates a new mock instance.
func NewMockRedisFuncs(ctrl *gomock.Controller) *MockRedisFuncs {
	mock := &MockRedisFuncs{ctrl: ctrl}
	mock.recorder = &MockRedisFuncsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRedisFuncs) EXPECT() *MockRedisFuncsMockRecorder {
	return m.recorder
}

// FindToken mocks base method.
func (m *MockRedisFuncs) FindToken(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindToken", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// FindToken indicates an expected call of FindToken.
func (mr *MockRedisFuncsMockRecorder) FindToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindToken", reflect.TypeOf((*MockRedisFuncs)(nil).FindToken), arg0)
}

// Ping mocks base method.
func (m *MockRedisFuncs) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockRedisFuncsMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockRedisFuncs)(nil).Ping))
}

// SetToken mocks base method.
func (m *MockRedisFuncs) SetToken(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetToken", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetToken indicates an expected call of SetToken.
func (mr *MockRedisFuncsMockRecorder) SetToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetToken", reflect.TypeOf((*MockRedisFuncs)(nil).SetToken), arg0)
}

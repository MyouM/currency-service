// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: currency.proto

package currpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClientSpecRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientSpecRequest) Reset() {
	*x = ClientSpecRequest{}
	mi := &file_currency_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientSpecRequest) ProtoMessage() {}

func (x *ClientSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_currency_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientSpecRequest.ProtoReflect.Descriptor instead.
func (*ClientSpecRequest) Descriptor() ([]byte, []int) {
	return file_currency_proto_rawDescGZIP(), []int{0}
}

func (x *ClientSpecRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type ClientSpecResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      float64                `protobuf:"fixed64,1,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientSpecResponse) Reset() {
	*x = ClientSpecResponse{}
	mi := &file_currency_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientSpecResponse) ProtoMessage() {}

func (x *ClientSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_currency_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientSpecResponse.ProtoReflect.Descriptor instead.
func (*ClientSpecResponse) Descriptor() ([]byte, []int) {
	return file_currency_proto_rawDescGZIP(), []int{1}
}

func (x *ClientSpecResponse) GetCurrency() float64 {
	if x != nil {
		return x.Currency
	}
	return 0
}

type ClientIntervalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DateBegin     string                 `protobuf:"bytes,1,opt,name=date_begin,json=dateBegin,proto3" json:"date_begin,omitempty"`
	DateEnd       string                 `protobuf:"bytes,2,opt,name=date_end,json=dateEnd,proto3" json:"date_end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientIntervalRequest) Reset() {
	*x = ClientIntervalRequest{}
	mi := &file_currency_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientIntervalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientIntervalRequest) ProtoMessage() {}

func (x *ClientIntervalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_currency_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientIntervalRequest.ProtoReflect.Descriptor instead.
func (*ClientIntervalRequest) Descriptor() ([]byte, []int) {
	return file_currency_proto_rawDescGZIP(), []int{2}
}

func (x *ClientIntervalRequest) GetDateBegin() string {
	if x != nil {
		return x.DateBegin
	}
	return ""
}

func (x *ClientIntervalRequest) GetDateEnd() string {
	if x != nil {
		return x.DateEnd
	}
	return ""
}

type CurrencyRates struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Rate          float64                `protobuf:"fixed64,2,opt,name=rate,proto3" json:"rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrencyRates) Reset() {
	*x = CurrencyRates{}
	mi := &file_currency_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrencyRates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyRates) ProtoMessage() {}

func (x *CurrencyRates) ProtoReflect() protoreflect.Message {
	mi := &file_currency_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyRates.ProtoReflect.Descriptor instead.
func (*CurrencyRates) Descriptor() ([]byte, []int) {
	return file_currency_proto_rawDescGZIP(), []int{3}
}

func (x *CurrencyRates) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CurrencyRates) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type ClientIntervalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rates         []*CurrencyRates       `protobuf:"bytes,1,rep,name=rates,proto3" json:"rates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientIntervalResponse) Reset() {
	*x = ClientIntervalResponse{}
	mi := &file_currency_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientIntervalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientIntervalResponse) ProtoMessage() {}

func (x *ClientIntervalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_currency_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientIntervalResponse.ProtoReflect.Descriptor instead.
func (*ClientIntervalResponse) Descriptor() ([]byte, []int) {
	return file_currency_proto_rawDescGZIP(), []int{4}
}

func (x *ClientIntervalResponse) GetRates() []*CurrencyRates {
	if x != nil {
		return x.Rates
	}
	return nil
}

var File_currency_proto protoreflect.FileDescriptor

const file_currency_proto_rawDesc = "" +
	"\n" +
	"\x0ecurrency.proto\x12\x06currpb\"'\n" +
	"\x11ClientSpecRequest\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\"0\n" +
	"\x12ClientSpecResponse\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\x01R\bcurrency\"Q\n" +
	"\x15ClientIntervalRequest\x12\x1d\n" +
	"\n" +
	"date_begin\x18\x01 \x01(\tR\tdateBegin\x12\x19\n" +
	"\bdate_end\x18\x02 \x01(\tR\adateEnd\"7\n" +
	"\rCurrencyRates\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12\x12\n" +
	"\x04rate\x18\x02 \x01(\x01R\x04rate\"E\n" +
	"\x16ClientIntervalResponse\x12+\n" +
	"\x05rates\x18\x01 \x03(\v2\x15.currpb.CurrencyRatesR\x05rates2\xb5\x01\n" +
	"\x0fCurrencyService\x12L\n" +
	"\x13GetSpecificCurrency\x12\x19.currpb.ClientSpecRequest\x1a\x1a.currpb.ClientSpecResponse\x12T\n" +
	"\x13GetIntervalCurrency\x12\x1d.currpb.ClientIntervalRequest\x1a\x1e.currpb.ClientIntervalResponseB\x0eZ\fproto/currpbb\x06proto3"

var (
	file_currency_proto_rawDescOnce sync.Once
	file_currency_proto_rawDescData []byte
)

func file_currency_proto_rawDescGZIP() []byte {
	file_currency_proto_rawDescOnce.Do(func() {
		file_currency_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_currency_proto_rawDesc), len(file_currency_proto_rawDesc)))
	})
	return file_currency_proto_rawDescData
}

var file_currency_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_currency_proto_goTypes = []any{
	(*ClientSpecRequest)(nil),      // 0: currpb.ClientSpecRequest
	(*ClientSpecResponse)(nil),     // 1: currpb.ClientSpecResponse
	(*ClientIntervalRequest)(nil),  // 2: currpb.ClientIntervalRequest
	(*CurrencyRates)(nil),          // 3: currpb.CurrencyRates
	(*ClientIntervalResponse)(nil), // 4: currpb.ClientIntervalResponse
}
var file_currency_proto_depIdxs = []int32{
	3, // 0: currpb.ClientIntervalResponse.rates:type_name -> currpb.CurrencyRates
	0, // 1: currpb.CurrencyService.GetSpecificCurrency:input_type -> currpb.ClientSpecRequest
	2, // 2: currpb.CurrencyService.GetIntervalCurrency:input_type -> currpb.ClientIntervalRequest
	1, // 3: currpb.CurrencyService.GetSpecificCurrency:output_type -> currpb.ClientSpecResponse
	4, // 4: currpb.CurrencyService.GetIntervalCurrency:output_type -> currpb.ClientIntervalResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_currency_proto_init() }
func file_currency_proto_init() {
	if File_currency_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_currency_proto_rawDesc), len(file_currency_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_currency_proto_goTypes,
		DependencyIndexes: file_currency_proto_depIdxs,
		MessageInfos:      file_currency_proto_msgTypes,
	}.Build()
	File_currency_proto = out.File
	file_currency_proto_goTypes = nil
	file_currency_proto_depIdxs = nil
}

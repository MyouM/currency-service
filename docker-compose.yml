version: '3.9'
services:
  postgres:
    container_name: currency_db
    image: postgres:16.4
    environment:
      POSTGRES_DB: currency_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - ./postgres-data:/data/postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d currency_db"]
      interval: 1s
      timeout: 1s
      retries: 5

  redis:
    image: redis:latest
    container_name: currency_redis
    environment:
      - REDIS_PASSWORD=password
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data

  currency:
    build:
      context: .
      dockerfile: ./deployment/local/Dockerfile
      args:
        - BUILD_TARGET=./cmd/currency/main.go
    volumes:
      - ./internal/config:/internal/config
      - ./internal/migrations:/internal/migrations
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy

  gateway:
    build:
      context: .
      dockerfile: ./deployment/local/Dockerfile
      args:
        - BUILD_TARGET=./cmd/gateway/main.go
    volumes:
      - ./internal/config:/internal/config
    ports:
      - "8082:8082"
    depends_on:
      - redis
      - currency

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./internal/metrics/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "echo stat | nc localhost 2181 | grep Mode"]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9999:9999"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # PLAINTEXT - внутренняя сеть, PLAINTEXT_HOST - для локальных клиентов
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 30s

  auth:
    build:
      context: .
      dockerfile: ./deployment/local/Dockerfile
      args:
        - BUILD_TARGET=./cmd/auth/main.go
    volumes:
      - ./internal/config:/internal/config
      - ./internal/migrations:/internal/migrations
    restart: always
    depends_on:
      - redis
      - gateway
      - kafka
      - zookeeper


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      # Увеличил таймауты для подключения, иногда флакает
      KAFKA_CLUSTERS_0_PROPERTIES_REQUEST_TIMEOUT_MS: 45000
      KAFKA_CLUSTERS_0_PROPERTIES_RETRY_BACKOFF_MS: 1000
    depends_on:
      - kafka
      - zookeeper

